@if $use-flex {
	//设置flex布局
	.#{$bc-prefix-name}flex {
		display: flex;
	}

	//设置flex-inline布局
	.#{$bc-prefix-name}flex-inline {
		display: inline-flex;
	}

	//设置flex 1 - 10 排布
	@for $i from 1 through 10 {
		.#{$bc-prefix-name}flex-#{$i} {
			flex: #{$i};
		}
	}

	//设置常用的flex-direction属性 方向
	@each $name, $attrname in $flex-direction {
		.#{$bc-prefix-name}flex-d-#{$name} {
			flex-direction: #{$attrname};
		}
	}

	//设置常用的flex-wrap属性 转行
	@each $name, $attrname in $flex-wrap {
		.#{$bc-prefix-name}flex-w-#{$name} {
			flex-wrap: #{$attrname};
		}
	}

	//设置常用的flex-flow属性 dorection和wrap的混合用法
	@each $name, $direction-name in $flex-direction {
		@each $_name, $wrap-name in $flex-wrap {
			.#{$bc-prefix-name}flex-f-#{$name}-#{$_name} {
				flex-flow: #{$direction-name} #{$wrap-name};
			}
		}
	}

	//设置主轴上的对齐方式 justrify-content
	@each $name, $attrname in $flex-justify {
		.#{$bc-prefix-name}flex-jc-#{$name} {
			justify-content: #{$attrname};
		}
	}

	//设置交叉轴的对齐方式 align-item
	@each $name, $attrname in $flex-align-item {
		.#{$bc-prefix-name}flex-ai-#{$name} {
			align-items: #{$attrname};
		}
	}

	/*
	 * 属性定义了多根轴线的对齐方式。
	 * 如果项目只有一根轴线，
	 * 只有一行的flex是不起作用的，
	 * 设置wrap就可以起作用了，
	 * 该属性不起作用 align-content
	 * */
	@each $name, $attrname in $flex-align-content {
		.#{$bc-prefix-name}flex-ac-#{$name} {
			align-content: #{$attrname};
		}
	}

	//设置flex-basis 1 - 10 排布
	@for $i from 1 through 20 {
		.#{$bc-prefix-name}flex-basis-#{$i * 5} {
			flex-basis: $i * 5%;
		}
	}

	// item 定位
	@each $name, $attrname in $align-self {
		.#{$bc-prefix-name}flex-as-#{$name} {
			align-self: #{$attrname};
		}
	}
}

